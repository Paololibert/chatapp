// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// schema.prisma

model User {
  id       Int      @id @default(autoincrement())
  username String   @unique
  password String
  chats    Chat[]   @relation("UserChats")
  messages Message[]
}

model Chat {
  id           Int        @id @default(autoincrement())
  participants User[]     @relation("UserChats")
  messages     Message[]
  files    Files[]
}

model Message {
  id         Int      @id @default(autoincrement())
  sender     User     @relation(fields: [senderId], references: [id])
  senderId   Int
  content    String
  timestamp  DateTime @default(now())
  chat       Chat     @relation(fields: [chatId], references: [id])
  chatId     Int
  files      Files[]  @relation("MessageFiles")
}

model Files {
  id        Int      @id @default(autoincrement())
  filename  String
  path      String
  mimetype  String
  chat      Chat     @relation(fields: [chatId], references: [id])
  chatId    Int
  message   Message? @relation("MessageFiles", fields: [messageId], references: [id])
  messageId Int?
  createdAt DateTime @default(now())
}


model Job{
  id        Int      @id @default(autoincrement())
  name      String
  description String
}

